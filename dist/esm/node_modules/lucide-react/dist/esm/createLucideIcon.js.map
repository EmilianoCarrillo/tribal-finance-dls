{"version":3,"file":"createLucideIcon.js","sources":["../../../../../../node_modules/lucide-react/dist/esm/createLucideIcon.js"],"sourcesContent":["/**\n * lucide-react v0.274.0 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) => createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: `lucide lucide-${toKebabCase(iconName)}`,\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]) || []\n      ]\n    )\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n"],"names":["toKebabCase","string","replace","toLowerCase","createLucideIcon","iconName","iconNode","Component","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","children","rest","ref","createElement","defaultAttributes","width","height","stroke","Number","className","map","tag","attrs","Array","isArray","displayName"],"mappings":"4FAOK,MAACA,EAAeC,GAAWA,EAAOC,QAAQ,qBAAsB,SAASC,cACxEC,EAAmB,CAACC,EAAUC,KAClC,MAAMC,EAAYC,GAChB,EAAGC,QAAQ,eAAgBC,OAAO,GAAIC,cAAc,EAAGC,sBAAqBC,cAAaC,GAAQC,IAAQC,EACvG,MACA,CACED,SACGE,EACHC,MAAOR,EACPS,OAAQT,EACRU,OAAQX,EACRE,YAAaC,EAA4C,GAAtBS,OAAOV,GAAoBU,OAAOX,GAAQC,EAC7EW,UAAW,iBAAiBtB,EAAYK,QACrCS,GAEL,IACKR,EAASiB,KAAI,EAAEC,EAAKC,KAAWT,EAAcQ,EAAKC,SACjDC,MAAMC,QAAQd,GAAYA,EAAW,CAACA,KAAc,OAK9D,OADAN,EAAUqB,YAAc,GAAGvB,IACpBE,CAAS"}